***********2 X 1 MUX CODE*********
library ieee;
 use ieee.std_logic_1164.all;
 entity multiplier is
 port( a: in std_logic;
 i0:in std_logic;
 i1:in std_logic;
 q:out std_logic);
 end multiplier;
 architecture multiplierarc of multiplier is
 begin
 process(a,i0,i1)
 begin
 if(a='0' and i0='0' and i1='0') then
 q<='0';
 elsif(a='0' and i0='0' and i1='1')then
 q<='0';
 elsif(a='0' and i0='1' and i1='0')then
 q<='1';
 elsif(a='0' and i0='1' and i1='1')the
n
 q<='1';
 elsif(a='1' and i0='0' and i1='0')then
 q<='0';
 elsif(a='1' and i0='0' and i1='1')then
 q<='1';
 elsif(a='1' and i0='1' and i1='0')then
 q<='0';
 else
 q<='1';
 end if;
 end process;
 end multiplierarc;

***********BARREL SHIFTER CODE********
library ieee;
use ieee.std_logic_1164.all;
entity Barrel is
port( a0,a1,a2,a3 : in std_logic;
9
 s0,s1: in std_logic;
 y0,y1,y2,y3 : out std_logic);
 end barrel;
architecture barrelarc of barrel is
 signal p0,p1,p2,p3 : std_logic;
 component multiplier is
 port( a: in std_logic;
 i0:in std_logic;
 i1:in std_logic;
 q:out std_logic);
 end component;
 begin
 m1 : multiplier port map(a0,a2,s0,p0);
 m2 : multiplier port map(a1,a3,s0,p1);
 m3 : multiplier port map (a2,a0,s0,p2);
 m4 : multiplier port map(a3,a1,s0,p3);
 m5 : multiplier port map(p0,p1,s1,y0);
 m6 : multiplier port map(p1,p2,s1,y1);
 m7 : multiplier port map(p2,p3,s1,y2);
m8 : multiplier port map (p3,p0,s1,y3);
end barrelarc;